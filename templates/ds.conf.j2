## {{ ansible_managed }}

include /etc/nginx/includes/http-common.conf;

server {
{% if ansible_default_ipv4.address is defined %}
  listen {{ ansible_default_ipv4.address }}:{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_ds_port) }} {% if onlyoffice_ssl | bool %}ssl {% endif %}default_server;
{% else %}
  listen 0.0.0.0:{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_ds_port) }} {% if onlyoffice_ssl | bool %}ssl {% endif %}default_server;
{% endif %}
{% if ansible_default_ipv6.address is defined %}
  listen {{ ansible_default_ipv6.address }}:{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_ds_port) }} {% if onlyoffice_ssl | bool %}ssl {% endif %}default_server;
{% else %}
  listen [::]:{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_ds_port) }} {% if onlyoffice_ssl | bool %}ssl {% endif %}default_server;
{% endif %}
  server_tokens off;
  set $secure_link_secret "{{ onlyoffice_local_fs_secretstring }}";
  root /usr/share/nginx/html;

{% if onlyoffice_ssl | bool %}
  ## Strong SSL Security
  ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
  # the "ssl" directive is deprecated, use the "listen ... ssl" directive instead
  # ssl on;
  ssl_certificate "{{ onlyoffice_ssl_certificate }}";
  ssl_certificate_key "{{ onlyoffice_ssl_certificate_key }}";
  # Uncomment string below and specify the path to the file with the password if you use encrypted certificate key
  # ssl_password_file /foo/bar;
  ssl_verify_client off;

  # The ciphers and protocols need to be set here
  # https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
  ssl_prefer_server_ciphers off;

  ssl_session_cache  builtin:1000  shared:SSL:10m;

  ## [Optional] If your certficate has OCSP, enable OCSP stapling to reduce the overhead and latency of running SSL.
  ## Replace with your ssl_trusted_certificate. For more info see:
  ## - https://medium.com/devops-programming/4445f4862461
  ## - https://www.ruby-forum.com/topic/4419319
  ## - https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx
  # ssl_stapling on;
  # ssl_stapling_verify on;
  # ssl_trusted_certificate /etc/nginx/ssl/stapling.trusted.crt;
  # resolver 208.67.222.222 208.67.222.220 valid=300s; # Can change to your DNS resolver if desired
  # resolver_timeout 10s;

  ## [Optional] Generate a stronger DHE parameter:
  ##   cd /etc/ssl/certs
  ##   sudo openssl dhparam -out dhparam.pem 4096
  ##
  ssl_dhparam /etc/nginx/ssl_dhparam.pem;
{% endif %}

  # force utf-8 and content type for /robots.txt
  # https://www.cyberciti.biz/faq/how-to-override-content-type-with-nginx-web-server/
  location = /robots.txt {
      types { } default_type "text/plain; charset=us-ascii";
  }

  add_header Strict-Transport-Security max-age=31536000;
  # add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;

  include /etc/nginx/includes/ds-*.conf;

  access_log /var/log/nginx/ds_access.log;
  error_log /var/log/nginx/ds_error.log;

}

# vim: syntax=nginx
