# Copyright 2020-2024 Chris Croome
#
# This file is part of the Webarchitects ONLYOFFICE Ansible role.
#
# The Webarchitects ONLYOFFICE Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects ONLYOFFICE Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects ONLYOFFICE Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
onlyoffice: false
onlyoffice_db_port: "3306"
# onlyoffice_db_port: "5432"
onlyoffice_db_type: mariadb
# onlyoffice_db_type: postgres
onlyoffice_docservice_port: "8000"
onlyoffice_ds_host: localhost
onlyoffice_ds_port: "443"
onlyoffice_debconf:
  - name: onlyoffice-documentserver
    question: onlyoffice/cluster-mode
    value: false
    vtype: boolean
  - name: onlyoffice-documentserver
    question: onlyoffice/db-host
    value: localhost
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/db-name
    value: onlyoffice
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/db-port
    value: "{{ onlyoffice_db_port }}"
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/db-pwd
    value: "{{ onlyoffice_db_pwd }}"
    vtype: password
  - name: onlyoffice-documentserver
    question: onlyoffice/db-type
    value: "{{ onlyoffice_db_type }}"
    # value: postgres  # PostgreSQL
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/db-user
    value: onlyoffice
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/docservice-port
    value: "{{ onlyoffice_docservice_port }}"
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/ds-port
    value: "{{ onlyoffice_ds_port }}"
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/example-port
    value: "3000"
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/jwt-enabled
    value: true
    vtype: boolean
  - name: onlyoffice-documentserver
    question: onlyoffice/jwt-header
    value: AuthorizationJwt
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/jwt-secret
    value: "{{ onlyoffice_jwt_secret }}"
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/rabbitmq-host
    value: "{{ onlyoffice_rabbitmq_host }}"
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/rabbitmq-proto
    value: amqp
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/rabbitmq-pwd
    value: "{{ onlyoffice_rabbitmq_pwd }}"
    vtype: password
  - name: onlyoffice-documentserver
    question: onlyoffice/rabbitmq-user
    value: onlyoffice
    vtype: string
  - name: onlyoffice-documentserver
    question: onlyoffice/remove-db
    value: false
    vtype: boolean
# https://github.com/ONLYOFFICE/DocumentServer/blob/master/CHANGELOG.md
# see vars/main.yml for the full versions strings that are required here:
onlyoffice_docserver_version: 8.2.0-143
onlyoffice_fs_secret: ""  # This is reset when the role is run
onlyoffice_local:
  rabbitmq:
    url: "{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_rabbitmq_proto) }}://{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_rabbitmq_user) }}:{{ onlyoffice_rabbitmq_pwd }}@{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_rabbitmq_host) }}"
  services:
    CoAuthoring:
      secret:
        session:
          string: "{{ onlyoffice_jwt_secret }}"
        inbox:
          string: "{{ onlyoffice_jwt_secret }}"
        outbox:
          string: "{{ onlyoffice_jwt_secret }}"
      server:
        port: "{{ onlyoffice_docservice_port }}"
      sql:
        type: "{{ onlyoffice_db_type }}"
        dbHost: "{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_db_host) }}"
        dbPort: "{{ onlyoffice_db_port }}"
        dbName: "{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_db_name) }}"
        dbUser: "{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_db_user) }}"
        dbPass: "{{ onlyoffice_db_pwd }}"
      token:
        enable:
          browser: true
          request:
            inbox: true
            outbox: true
        inbox:
          header: "{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_jwt_header) }}"
        outbox:
          header: "{{ onlyoffice_debconf | community.general.json_query(onlyoffice_jpq_jwt_header) }}"
  storage:
    fs:
      secretString: "{{ onlyoffice_fs_secret }}"
  # wopi: "{{ vault_onlyoffice_wopi }}"
onlyoffice_mariadb_socket: /run/mysqld/mysqld.sock
onlyoffice_nginx_localhost: true
onlyoffice_nginx_localhost_domain: localhost
onlyoffice_nginx_localhost_port: 82
onlyoffice_nginx_sites_disabled:
  - default
  - default.conf
onlyoffice_nginx_sites_enabled:
  - localhost.conf
onlyoffice_rabbitmq_host: localhost
onlyoffice_ssl: true
onlyoffice_ssl_certificate: "/etc/ssl/le/{{ inventory_hostname }}.fullchain.pem"
onlyoffice_ssl_certificate_key: "/etc/ssl/le/{{ inventory_hostname }}.key.pem"
onlyoffice_verify: true
onlyoffice_wopi: fail
...
