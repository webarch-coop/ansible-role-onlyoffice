# Copyright 2020-2024 Chris Croome
#
# This file is part of the Webarchitects ONLYOFFICE Ansible role.
#
# The Webarchitects ONLYOFFICE Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects ONLYOFFICE Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects ONLYOFFICE Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Verify as root
  become: true
  connection: local
  gather_facts: true
  hosts:
    - localhost
  tasks:

    - name: Verify in a block to allow a rescue
      block:

        - name: ONLYOFFICE Document Server present
          ansible.builtin.apt:
            pkg:
              - onlyoffice-documentserver
            install_recommends: true
            state: present
          check_mode: true

        - name: Gather service facts
          ansible.builtin.service_facts:

        - name: Set a fact for the ds-docservice
          ansible.builtin.set_fact:
            molecule_ds_docservice: "{{ ansible_facts.services | community.general.json_query(molecule_ds_docservice_jpq) }}"
          vars:
            molecule_ds_docservice_jpq: '["ds-docservice.service"]|[0]'

        - name: Debug molecule_ds_docservice
          ansible.builtin.debug:
            var: molecule_ds_docservice

        - name: The ONLYOFFICE Document Server should be enabled and running
          ansible.builtin.assert:
            that:
              - molecule_ds_docservice.state == "running"
              - molecule_ds_docservice.status == "enabled"
            quiet: true

        - name: Gather facts on listening ports
          community.general.listen_ports_facts:
          register: molecule_port_facts

        - name: Debug listening ports
          ansible.builtin.debug:
            var: molecule_port_facts

        - name: ONLYOFFICE healthcheck
          ansible.builtin.uri:
            url: "http://{{ ansible_facts.default_ipv4.address }}/healthcheck"
            return_content: true
          register: molecule_onlyoffice_healthcheck
          until:
            - molecule_onlyoffice_healthcheck.content is defined
            - molecule_onlyoffice_healthcheck.content == "true"
          retries: 10
          delay: 5

        - name: ONLYOFFICE info
          ansible.builtin.uri:
            url: "http://{{ ansible_facts.default_ipv4.address }}:82/info/info.json"
            return_content: true
          register: molecule_onlyoffice_info

        - name: Debug ONLYOFFICE info
          ansible.builtin.debug:
            var: molecule_onlyoffice_info.content

      rescue:

        - name: Debug ONLYOFFICE healthcheck
          ansible.builtin.debug:
            var: molecule_onlyoffice_healthcheck.content
          when: molecule_onlyoffice_healthcheck.content is defined

        - name: Get debconf values for onlyoffice-documentserver
          ansible.builtin.debconf:
            name: onlyoffice-documentserver
          register: molecule_onlyoffice_dcnf

        - name: Debug molecule_onlyoffice_dcnf
          ansible.builtin.debug:
            var: molecule_onlyoffice_dcnf
            verbosity: 2

        - name: Create a list of the existing debconf values
          ansible.builtin.set_fact:
            molecule_onlyoffice_dcnf_current: "{{ molecule_onlyoffice_dcnf.current | ansible.builtin.dict2items }}"
          when:
            - molecule_onlyoffice_dcnf.current is defined
            - molecule_onlyoffice_dcnf.current != {}

        - name: Debug molecule_onlyoffice_dcnf_current
          ansible.builtin.debug:
            var: molecule_onlyoffice_dcnf_current
          when: molecule_onlyoffice_dcnf_current is defined

        - name: Find files in /etc/nginx/sites-enabled
          ansible.builtin.find:
            path: /etc/nginx/sites-enabled
          register: molecule_nginx_sites_enabled

        - name: Debug molecule_nginx_sites_enabled.files
          ansible.builtin.debug:
            var: molecule_nginx_sites_enabled.files

        - name: Slurp /etc/onlyoffice/documentserver/nginx/ds.conf
          ansible.builtin.slurp:
            src: /etc/onlyoffice/documentserver/nginx/ds.conf
          register: molecule_onlyoffice_documentserver_nginx_ds_b64encoded

        - name: Decode the base64 encoded version of /etc/onlyoffice/documentserver/nginx/ds.conf and set a fact
          ansible.builtin.set_fact:
            molecule_onlyoffice_documentserver_nginx_ds: >-
             {{ molecule_onlyoffice_documentserver_nginx_ds_b64encoded['content'] |
             ansible.builtin.b64decode | trim }}

        - name: Debug the contents of /etc/onlyoffice/documentserver/nginx/ds.conf
          ansible.builtin.debug:
            var: molecule_onlyoffice_documentserver_nginx_ds

        - name: Slurp /etc/onlyoffice/documentserver/nginx/includes/http-common.conf
          ansible.builtin.slurp:
            src: /etc/onlyoffice/documentserver/nginx/includes/http-common.conf
          register: molecule_onlyoffice_documentserver_nginx_http_common_b64encoded

        - name: Decode the base64 encoded version of /etc/onlyoffice/documentserver/nginx/includes/http-common.conf and set a fact
          ansible.builtin.set_fact:
            molecule_onlyoffice_documentserver_nginx_http_common: >-
             {{ molecule_onlyoffice_documentserver_nginx_http_common_b64encoded['content'] |
             ansible.builtin.b64decode | trim }}

        - name: Debug the contents of /etc/onlyoffice/documentserver/nginx/includes/http-common.conf
          ansible.builtin.debug:
            var: molecule_onlyoffice_documentserver_nginx_http_common

        - name: "Check the response from {{ molecule_healthcheck_url }}"
          ansible.builtin.uri:
            url: "{{ molecule_healthcheck_url }}"
            method: GET
          check_mode: false
          vars:
            molecule_healthcheck_url: "http://{{ ansible_facts.default_ipv4.address }}:8000/healthcheck"
          changed_when: false
          failed_when: false
          register: molecule_onlyoffice_healthcheck

        - name: Debug molecule_onlyoffice_healthcheck
          ansible.builtin.debug:
            var: molecule_onlyoffice_healthcheck

        # - name: Find .conf files in /etc/onlyoffice/documentserver/nginx/includes
        #   ansible.builtin.find:
        #     path: /etc/onlyoffice/documentserver/nginx/includes/
        #     pattern: "*.conf"
        #   register: molecule_onlyoffice_documentserver_nginx_includes

        # - name: Debug molecule_onlyoffice_documentserver_nginx_includes.files
        #   ansible.builtin.debug:
        #     var: molecule_onlyoffice_documentserver_nginx_includes.files

        - name: Fail
          ansible.builtin.fail:
...
