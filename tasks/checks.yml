# Copyright 2020-2025 Chris Croome
#
# This file is part of the Webarchitects ONLYOFFICE Ansible role.
#
# The Webarchitects ONLYOFFICE Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects ONLYOFFICE Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects ONLYOFFICE Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: ONLYOFFICE checks
  block:

    - name: Read facts
      ansible.builtin.setup:

    - name: Debug ansible_facts.ansible_local.dpkg.installed
      ansible.builtin.debug:
        var: ansible_facts.ansible_local.dpkg.installed
        verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: Check list of install packages is defined
      ansible.builtin.assert:
        that:
          - ansible_facts.ansible_local.dpkg.installed is defined
          - ansible_facts.ansible_local.dpkg.installed | ansible.builtin.type_debug == "list"
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check database server requirements are present
      ansible.builtin.assert:
        that: >-
          ("mariadb-server" in ansible_facts.ansible_local.dpkg.installed) or
          ("postgresql" in ansible_facts.ansible_local.dpkg.installed)
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check RabbitMQ is present
      ansible.builtin.assert:
        that:
          - ("rabbitmq-server" in ansible_facts.ansible_local.dpkg.installed)
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check web server requirements are present
      ansible.builtin.assert:
        that: >-
          ("nginx" in ansible_facts.ansible_local.dpkg.installed) or
          ("nginx-extras" in ansible_facts.ansible_local.dpkg.installed) or
          ("nginx-full" in ansible_facts.ansible_local.dpkg.installed) or
          ("nginx-light" in ansible_facts.ansible_local.dpkg.installed)
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check the latest version of ONLYOFFICE DocumentServer
      ansible.builtin.uri:
        url: https://github.com/ONLYOFFICE/DocumentServer/releases/latest
        method: HEAD
        status_code: 302
        follow_redirects: none
      check_mode: false
      changed_when: false
      register: onlyoffice_docserver_headers

    - name: Set a fact for the latest version of ONLYOFFICE DocumentServer
      ansible.builtin.set_fact:
        onlyoffice_docserver_latest: "{{ onlyoffice_docserver_headers.location | ansible.builtin.urlsplit('path') | ansible.builtin.basename | ansible.builtin.regex_replace('^v') }}"

    - name: Check that the ONLYOFFICE DocumentServer version and required versions are in this roles list of versions available
      ansible.builtin.assert:
        that:
          - onlyoffice_docserver_version in onlyoffice_docserver_versions
          - onlyoffice_docserver_latest in ( onlyoffice_docserver_versions | map('regex_replace', '[-].*$') )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check ONLYOFFICE info
      block:

        - name: Check ONLYOFFICE info
          ansible.builtin.uri:
            url: "http://{{ onlyoffice_nginx_localhost_domain }}:{{ onlyoffice_nginx_localhost_port }}/info/info.json"
            return_content: true
          delegate_to: "{{ inventory_hostname }}"
          check_mode: false
          changed_when: false
          register: onlyoffice_info
          failed_when: onlyoffice_info.status is not ansible.builtin.regex('^(-1|200)$')

      rescue:

        - name: Debug ONLYOFFICE info
          ansible.builtin.debug:
            var: onlyoffice_info

      when: onlyoffice_nginx_localhost | bool

    - name: Set facts when ONLYOFFICE info status code is 200
      block:

        - name: Set a fact for the ONLYOFFICE version returned by ONLYOFFICE info
          ansible.builtin.set_fact:
            onlyoffice_build_number: "{{ onlyoffice_info.json.serverInfo.buildNumber }}"
            onlyoffice_build_version: "{{ onlyoffice_info.json.serverInfo.buildVersion }}"
            onlyoffice_info_version_build: "{{ onlyoffice_info.json.serverInfo.buildVersion }}-{{ onlyoffice_info.json.serverInfo.buildNumber }}"

        - name: Debug the ONLYOFFICE version returned by ONLYOFFICE info
          ansible.builtin.debug:
            var: onlyoffice_build_version
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"

      when: onlyoffice_info.status == "200"

    - name: Check the onlyoffice_db_port variable is a number
      ansible.builtin.assert:
        that:
          - onlyoffice_db_port is ansible.builtin.regex('^[0-9]{2,6}$')
        fail_msg: "Please set onlyoffice_db_port to a number, it is currently set to {{ onlyoffice_db_port }}"
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check the onlyoffice_ds_port variable is a number
      ansible.builtin.assert:
        that:
          - onlyoffice_ds_port is ansible.builtin.regex('^[0-9]{2,6}$')
        fail_msg: "Please set onlyoffice_ds_port to a number, it is currently set to {{ onlyoffice_ds_port }}"
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check the onlyoffice_nginx_localhost_port variable is a number
      ansible.builtin.assert:
        that:
          - onlyoffice_nginx_localhost_port is ansible.builtin.regex('^[0-9]{2,6}$')
        fail_msg: >-
          "Please set onlyoffice_nginx_localhost_port to a number, it is currently set to {{ onlyoffice_nginx_localhost_port }}"
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

  tags:
    - onlyoffice
...
