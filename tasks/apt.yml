# Copyright 2020-2025 Chris Croome
#
# This file is part of the Webarchitects ONLYOFFICE Ansible role.
#
# The Webarchitects ONLYOFFICE Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects ONLYOFFICE Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects ONLYOFFICE Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: ONLYOFFICE apt configured and packages installed
  block:

    - name: Find legacy ONLYOFFICE apt list files
      ansible.builtin.find:
        paths: /etc/apt/sources.list.d
        patterns: "*onlyoffice*.list"
      register: onlyoffice_old_apt_list_files

    - name: List legacy ONLYOFFICE apt list files to be disabled
      ansible.builtin.debug:
        msg: "apt list file {{ file.path }} to be moved to {{ file.path }}.ansible.save"
      loop: "{{ onlyoffice_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: (onlyoffice_old_apt_list_files.matched >= 1)

    - name: Disable legacy ONLYOFFICE apt list files
      ansible.builtin.command: "mv {{ file.path }} {{ file.path }}.ansible.save"
      changed_when: true
      loop: "{{ onlyoffice_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: (onlyoffice_old_apt_list_files.matched >= 1)

    - name: Legacy ONLYOFFICE support@onlyoffice.com GPG public key absent
      ansible.builtin.apt_key:
        # keyserver: keyserver.ubuntu.com
        id: 8320CA65CB2DE8E5
        state: absent

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
        owner: root
        group: root

    # Note that the Ubuntu GPG server returns a HTTP Error 405 Method Not Allowed when the get_url
    # module does a HEAD request in check mode, so these tasks don't run when in check mode
    # in addition the GPG public key comments change depending on the keyserver version, so those
    # lines need to be removed before the checksum is calculated

    - name: ONLYOFFICE gpg asc key downloaded
      ansible.builtin.get_url:
        url: "{{ onlyoffice_gpg_url }}"
        dest: /root/onlyoffice.asc
        force: true
        mode: "0644"
        owner: root
        group: root
      check_mode: false
      changed_when: false

    - name: Stat ONLYOFFICE gpg ascii armored file
      ansible.builtin.stat:
        path: /root/onlyoffice.asc
        checksum_algorithm: sha256
      register: onlyoffice_asc_file

    - name: Check gpg key when it exists
      block:

        - name: Check the ONLYOFFICE gpg ascii armored file sha256sum
          ansible.builtin.assert:
            that:
              - onlyoffice_asc_file.stat.checksum == onlyoffice_gpg_checksum_raw
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

        - name: ONLYOFFICE gpg key dearmored
          ansible.builtin.shell: |-
            set -e -o pipefail
            gpg --dearmor < /root/onlyoffice.asc > /etc/apt/keyrings/onlyoffice.gpg
            chmod 644 /etc/apt/keyrings/onlyoffice.gpg
          args:
            executable: "{{ ansible_facts.ansible_local.bash.path }}"
          check_mode: false
          changed_when: false

        - name: Stat ONLYOFFICE gpg dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/onlyoffice.gpg
          register: onlyoffice_gpg_file

        - name: ONLYOFFICE gpg key check command
          ansible.builtin.command: >
            gpg --with-colons
            {% if ansible_facts.ansible_local.gpg.version is version('2.2.12', '<') %}
            --with-fingerprint --with-subkey-fingerprint
            {% else %}
            --show-keys
            {% endif %}
            /etc/apt/keyrings/onlyoffice.gpg
          when: (onlyoffice_gpg_file.stat.exists | bool)
          check_mode: false
          changed_when: false
          register: onlyoffice_gpg

        - name: Set a fact for the ONLYOFFICE GPG fingerprints on the server
          ansible.builtin.set_fact:
            onlyoffice_gpg_fingerprints_found: "{{ onlyoffice_gpg.stdout | string | community.general.jc('gpg') | community.general.json_query(onlyoffice_gpg_fingerprints_query) | list }}"

        - name: ONLYOFFICE gpg key check first fingerprint for GPG versions less that 2.2.12
          ansible.builtin.assert:
            that:
              - onlyoffice_gpg_fingerprints_found[0] == onlyoffice_gpg_fingerprints[0]
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
          when: ansible_facts.ansible_local.gpg.version is version('2.2.12', '<')

        - name: ONLYOFFICE gpg key check all fingerprints
          ansible.builtin.assert:
            that:
              - onlyoffice_gpg_fingerprints_found | difference(onlyoffice_gpg_fingerprints) | length == 0
              - onlyoffice_gpg_fingerprints | difference(onlyoffice_gpg_fingerprints_found) | length == 0
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
          when: ansible_facts.ansible_local.gpg.version is version('2.2.12', '>=')

        - name: Stat ONLYOFFICE apt sources file
          ansible.builtin.stat:
            path: /etc/apt/sources.list.d/onlyoffice.sources
          register: onlyoffice_sources_path

        - name: Read and backup ONLYOFFICE repository sources file
          block:

            - name: Slurp /etc/apt/sources.list.d/onlyoffice.sources
              ansible.builtin.slurp:
                src: /etc/apt/sources.list.d/onlyoffice.sources
              register: onlyoffice_sources_contents_b64encoded

            - name: Decode the base64 encoded version of /etc/apt/sources.list.d/onlyoffice.sources
              ansible.builtin.set_fact:
                onlyoffice_sources_contents: "{{ onlyoffice_sources_contents_b64encoded['content'] | ansible.builtin.b64decode | string | community.general.jc('ini') }}"

            - name: Print the contents of /etc/apt/sources.list.d/onlyoffice.sources
              ansible.builtin.debug:
                var: onlyoffice_sources_contents
                verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"

            - name: Set a fact for the prior ONLYOFFICE repository sources file contents
              ansible.builtin.set_fact:
                onlyoffice_sources_contents_prior: "{{ onlyoffice_sources_contents }}"
              when: onlyoffice_sources_contents is defined

            - name: Check ONLYOFFICE repository sources file present
              ansible.builtin.deb822_repository:
                allow_downgrade_to_insecure: false
                allow_insecure: false
                allow_weak: false
                architectures: "{{ ansible_facts.ansible_local.dpkg.arch }}"
                check_date: true
                check_valid_until: true
                components: main
                enabled: true
                name: onlyoffice
                pdiffs: true
                signed_by: /etc/apt/keyrings/onlyoffice.gpg
                suites: squeeze
                types: deb
                uris: https://download.onlyoffice.com/repo/debian
              check_mode: true
              changed_when: false
              register: onlyoffice_sources_check

            - name: Debug proposed onlyoffice_sources_check.repo
              ansible.builtin.debug:
                var: onlyoffice_sources_check.repo
                verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"

            - name: Backup old onlyoffice.sources file
              ansible.builtin.command:
                cmd: >-
                  mv
                  /etc/apt/sources.list.d/onlyoffice.sources
                  /etc/apt/sources.list.d/.onlyoffice.sources.{{ onlyoffice_date_timestamp }}.ansible.save
              args:
                creates: "/etc/apt/sources.list.d/.onlyoffice.sources.{{ onlyoffice_date_timestamp }}.ansible.save"
                removes: /etc/apt/sources.list.d/onlyoffice.sources
              vars:
                onlyoffice_date_timestamp: "{{ ansible_facts.date_time.iso8601_basic_short }}"
              when: onlyoffice_sources_contents_prior != onlyoffice_sources_check.repo | string | community.general.jc('ini')

          when: onlyoffice_sources_path.stat.exists | bool

        - name: ONLYOFFICE apt sources file present
          ansible.builtin.deb822_repository:
            allow_downgrade_to_insecure: false
            allow_insecure: false
            allow_weak: false
            architectures: "{{ ansible_facts.ansible_local.dpkg.arch }}"
            check_date: true
            check_valid_until: true
            components: main
            enabled: true
            name: onlyoffice
            pdiffs: true
            signed_by: /etc/apt/keyrings/onlyoffice.gpg
            suites: squeeze
            types: deb
            uris: https://download.onlyoffice.com/repo/debian
          register: onlyoffice_sources

        - name: Print the changes in the ONLYOFFICE repository sources file  # noqa: no-handler
          block:

            - name: Debug updated onlyoffice_sources.repo
              ansible.builtin.debug:
                var: onlyoffice_sources.repo
                verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}1{% else %}2{% endif %}"

            - name: Diff ONLYOFFICE repository sources file update
              ansible.utils.fact_diff:
                before: "{{ onlyoffice_sources_contents_prior | ansible.builtin.to_nice_yaml }}"
                after: "{{ onlyoffice_sources.repo | string | community.general.jc('ini') | ansible.builtin.to_nice_yaml }}"
              when:
                - ( ansible_check_mode | bool ) or ( ansible_diff_mode | bool )
                - onlyoffice_sources_contents_prior is defined
                - onlyoffice_sources.repo is defined

          when: onlyoffice_sources.changed | bool

      when: onlyoffice_asc_file.stat.exists | bool

    - name: ONLYOFFICE apt preferences present
      ansible.builtin.template:
        src: onlyoffice.pref.j2
        dest: /etc/apt/preferences.d/onlyoffice.pref
        mode: "0644"
        owner: root
        group: root
      register: onlyoffice_preferences

    - name: Update apt cache  # noqa: no-handler
      ansible.builtin.apt:
        update_cache: true
      when: (onlyoffice_sources.changed | bool) or (onlyoffice_preferences.changed | bool)

    - name: Font and other packages present
      ansible.builtin.apt:
        pkg:
          - debconf-utils
          - fonts-crosextra-carlito
          - fonts-dejavu
          - fonts-freefont-ttf
          - fonts-liberation2
          - fonts-opensymbol
          - fonts-takao-gothic
          - pwgen
          - ttf-bitstream-vera
          - ttf-mscorefonts-installer
        update_cache: true
        cache_valid_time: 60
        install_recommends: true
      register: onlyoffice_apt_deps

    - name: Re-read Ansible local facts  # noqa: no-handler
      ansible.builtin.setup:
        filter: ansible_local
      when: onlyoffice_apt_deps.changed | bool

  tags:
    - onlyoffice
    - onlyoffice_apt
...
